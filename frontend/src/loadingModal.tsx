import { useEffect, useState } from "react";
import loadingDog from "/dog_load.gif";

export const LoadingModal = () => {
  const [periods, setPeriods] = useState<number>(2);

  useEffect(() => {
    const interval = setInterval(() => {
      setPeriods((prev) => (prev + 1) % 4);
    }, 500);

    return () => clearInterval(interval);
  });

  return (
    <div className="min-w-[34vw] min-h-[50vh] bg-gradient-to-b from-[#86AD95] to-[#F6F2ED] rounded-lg p-4 flex flex-col items-center justify-center">
      <img src={loadingDog} alt="loading dog" width={400} height={300} />
      <div className="font-base text-3xl pb-4">
        Sit tight, fetching your results
        {Array.from({ length: periods }).map(() => ".")}
      </div>
      <div className="flex mx-auto justify-center gap-4 pb-6">
        <Bone />
        <Paw />
        <Bone />
        <Paw />
        <Bone />
        <Paw />
      </div>
    </div>
  );
};

const Bone = () => {
  return (
    <svg
      viewBox="0 0 101 51"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="animate-wiggle h-12 w-16"
    >
      <path
        d="M87.5654 50.0325C88.2866 50.0325 89.0043 49.9735 89.7151 49.8557C90.4258 49.7378 91.1227 49.561 91.8023 49.3252C92.4853 49.0929 93.1441 48.8051 93.7785 48.4619C94.413 48.1186 95.0128 47.7234 95.5815 47.2796C96.1501 46.8358 96.6805 46.3504 97.1659 45.8199C97.6548 45.2895 98.0951 44.7208 98.4904 44.1141C98.8856 43.5108 99.2254 42.8798 99.5132 42.2176C99.8044 41.5554 100.037 40.8758 100.21 40.1754C100.387 39.4751 100.505 38.7643 100.564 38.0466C100.623 37.3289 100.619 36.6078 100.56 35.8901C100.498 35.1689 100.38 34.4616 100.2 33.7612C100.023 33.0609 99.7871 32.3813 99.4958 31.7226C99.2046 31.0638 98.8614 30.4293 98.4626 29.8295C98.0674 29.2262 97.6236 28.6576 97.1347 28.1306C96.6459 27.6001 96.1154 27.1147 95.5433 26.6744C94.9747 26.2306 94.3714 25.8423 93.7369 25.4991C94.4546 25.1177 95.1342 24.6704 95.7721 24.1573C96.4066 23.6476 96.9926 23.0825 97.523 22.4619C98.0535 21.8412 98.5216 21.1756 98.9272 20.4683C99.3329 19.761 99.6727 19.019 99.9396 18.2493C100.207 17.4761 100.401 16.6856 100.522 15.8778C100.64 15.0699 100.685 14.2586 100.654 13.4438C100.619 12.6256 100.512 11.8212 100.331 11.0238C100.148 10.2263 99.8911 9.45664 99.5652 8.70774C99.2358 7.95884 98.844 7.24808 98.3829 6.57199C97.9218 5.89936 97.4017 5.27528 96.8262 4.69627C96.2471 4.12073 95.6231 3.60066 94.947 3.14299C94.2709 2.68187 93.5601 2.29008 92.8112 1.96417C92.0658 1.63826 91.2926 1.38516 90.4952 1.20487C89.7012 1.02111 88.8968 0.917097 88.0786 0.885892C87.2638 0.858155 86.4525 0.903228 85.6481 1.02458C84.8403 1.14593 84.0532 1.34355 83.2801 1.61399C82.5104 1.88443 81.7719 2.22421 81.068 2.62986C80.3607 3.03898 79.6985 3.51051 79.0779 4.04445C78.4608 4.57492 77.8956 5.16087 77.3894 5.80229C76.8797 6.44024 76.4325 7.1198 76.0511 7.84096C75.6697 8.56212 75.3611 9.31449 75.1184 10.0946C74.8792 10.8747 74.7128 11.6721 74.6192 12.4834C74.529 13.2948 74.5117 14.1095 74.5741 14.9243C74.633 15.7391 74.7683 16.54 74.9798 17.327C66.988 19.2721 58.8784 20.1944 50.6544 20.0973C42.4268 20.1944 34.3172 19.2721 26.3255 17.327C26.5335 16.5435 26.6653 15.7426 26.7207 14.9312C26.7797 14.1199 26.7623 13.3121 26.6687 12.5043C26.5751 11.6964 26.4052 10.9059 26.1625 10.1293C25.9233 9.35263 25.6113 8.60373 25.2299 7.88603C24.8485 7.16834 24.4047 6.49224 23.895 5.85776C23.3888 5.22327 22.8272 4.6408 22.21 4.11379C21.5928 3.58332 20.9341 3.11526 20.2303 2.7096C19.5264 2.30395 18.7879 1.96764 18.0217 1.70067C17.2555 1.43023 16.4719 1.23607 15.6675 1.11472C14.8631 0.993373 14.0553 0.9483 13.244 0.979504C12.4327 1.01071 11.6318 1.11472 10.8413 1.29501C10.0473 1.4753 9.2776 1.72841 8.53563 2.05085C7.7902 2.37676 7.0829 2.76854 6.41028 3.22274C5.73766 3.6804 5.11357 4.197 4.53803 4.76908C3.96248 5.34462 3.44588 5.96524 2.98475 6.63786C2.52709 7.30702 2.13531 8.01432 1.80593 8.75975C1.48002 9.50518 1.22345 10.2714 1.03969 11.0654C0.855934 11.8559 0.748453 12.6568 0.713781 13.4716C0.682577 14.2829 0.724183 15.0907 0.842065 15.8951C0.959948 16.6995 1.15064 17.4865 1.41414 18.2562C1.67764 19.0259 2.01396 19.761 2.41614 20.4683C2.81833 21.1756 3.28293 21.8378 3.80646 22.4584C4.33347 23.0755 4.91248 23.6407 5.5435 24.1538C6.17798 24.6635 6.85061 25.1107 7.56483 25.4956C7.06903 25.7626 6.59057 26.0607 6.13291 26.3901C5.67525 26.7195 5.23839 27.0766 4.8258 27.4649C4.41321 27.8498 4.02836 28.2624 3.67124 28.6958C3.31066 29.1326 2.98129 29.5903 2.68311 30.0687C2.38494 30.5472 2.11797 31.043 1.8822 31.5561C1.64644 32.0727 1.44535 32.5963 1.27892 33.1372C1.1125 33.678 0.984217 34.2258 0.887138 34.7806C0.793525 35.3388 0.734583 35.9005 0.710314 36.4621C0.686044 37.0273 0.699912 37.5924 0.75192 38.1541C0.803927 38.7158 0.890606 39.274 1.01195 39.8253C1.13677 40.3765 1.29279 40.9174 1.48695 41.4479C1.67764 41.9783 1.90647 42.4949 2.16651 42.9977C2.42654 43.4969 2.71778 43.9789 3.04023 44.4435C3.36267 44.9046 3.71285 45.3484 4.09423 45.7645C4.47215 46.1805 4.87781 46.5723 5.3112 46.9398C5.74112 47.3039 6.19185 47.6402 6.66685 47.9453C7.14184 48.2504 7.63418 48.5243 8.14385 48.767C8.65351 49.0097 9.17705 49.2177 9.71446 49.3911C10.2484 49.5644 10.7962 49.7031 11.3509 49.8071C11.9057 49.9111 12.4639 49.977 13.029 50.0082C13.5907 50.036 14.1524 50.029 14.7175 49.9874C15.2792 49.9458 15.8374 49.8661 16.3887 49.7482C16.94 49.6338 17.4843 49.4847 18.0148 49.2975C18.5487 49.1102 19.0688 48.8918 19.5715 48.6387C20.0742 48.3856 20.5631 48.0978 21.0277 47.7823C21.4958 47.4668 21.9396 47.1201 22.3626 46.7457C22.7855 46.3712 23.1808 45.969 23.5518 45.5426C23.9228 45.1196 24.2625 44.6688 24.5746 44.1973C24.8866 43.7292 25.1675 43.2404 25.4171 42.7342C25.6667 42.2245 25.8817 41.7044 26.062 41.1705C26.2423 40.6331 26.3879 40.0888 26.4988 39.5375C26.6098 38.9827 26.6826 38.4245 26.7207 37.8594C34.5877 35.9941 42.5655 35.1065 50.6509 35.1932C58.7362 35.1065 66.7141 35.9941 74.581 37.8594C74.6365 38.6776 74.7648 39.482 74.9728 40.276C75.1774 41.07 75.4548 41.8362 75.8049 42.5747C76.1551 43.3167 76.5712 44.017 77.0531 44.6792C77.535 45.3415 78.0759 45.9517 78.6722 46.5099C79.2721 47.0716 79.9135 47.5708 80.6069 48.0077C81.2969 48.448 82.025 48.8155 82.7843 49.1172C83.547 49.4188 84.3271 49.6476 85.1315 49.8002C85.9359 49.9527 86.7472 50.029 87.5654 50.0325Z"
        fill="#132205"
      />
    </svg>
  );
};

const Paw = () => {
  return (
    <svg
      viewBox="0 0 82 63"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="animate-wiggle h-12 w-12"
    >
      <path
        d="M17.0893 38.4957C21.815 35.6665 22.7824 28.5762 19.2494 22.6579C15.7164 16.7429 9.01786 14.2397 4.29215 17.0723C-0.437014 19.9015 -1.40781 26.9918 2.12866 32.9067C5.66167 38.8251 12.3602 41.3318 17.0893 38.4957Z"
        fill="#132205"
      />
      <path
        d="M24.8588 0.748806C19.5194 2.10099 16.5585 8.61573 18.2469 15.2969C19.9389 21.9815 25.6354 26.3016 30.9748 24.9494C36.3176 23.5972 39.2751 17.0825 37.5866 10.3978C35.8981 3.7132 30.1982 -0.606843 24.8588 0.748806Z"
        fill="#132205"
      />
      <path
        d="M57.43 62.4537C67.0929 61.3442 62.3048 45.6415 58.8169 40.1496C54.847 33.8984 49.3481 28.2088 42.5352 27.5258C34.4603 26.7145 28.4032 32.7057 23.6844 40.1461C21.0633 44.272 18.6467 51.0607 19.4684 56.3862C20.9488 65.9589 30.2408 61.5557 35.23 59.7354C38.2117 58.5635 41.294 58.1579 44.4803 58.515C45.094 58.5982 45.7042 58.7196 46.3074 58.8756C50.0693 59.8498 53.4497 62.9113 57.43 62.4537Z"
        fill="#132205"
      />
      <path
        d="M63.9969 38.4957C68.7261 41.3284 75.4246 38.8251 78.9576 32.9067C82.4906 26.9918 81.5233 19.9015 76.7976 17.0723C72.0684 14.2397 65.3699 16.7429 61.8369 22.6579C58.3004 28.5762 59.2712 35.6665 63.9969 38.4957Z"
        fill="#132205"
      />
      <path
        d="M56.2269 0.748806C50.8875 -0.606843 45.1875 3.7132 43.499 10.3978C41.8071 17.0825 44.768 23.5972 50.1109 24.9494C55.4537 26.3016 61.1502 21.9746 62.8387 15.2969C64.5272 8.6192 61.5628 2.10099 56.2269 0.748806Z"
        fill="#132205"
      />
    </svg>
  );
};
